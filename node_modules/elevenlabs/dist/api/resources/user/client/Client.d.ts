/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as ElevenLabs from "../../..";
export declare namespace User {
    interface Options {
        environment?: core.Supplier<environments.ElevenLabsEnvironment | string>;
        apiKey?: core.Supplier<string | undefined>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
export declare class User {
    protected readonly _options: User.Options;
    constructor(_options?: User.Options);
    /**
     * Gets extended information about the users subscription
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await elevenLabs.user.getSubscription()
     */
    getSubscription(requestOptions?: User.RequestOptions): Promise<ElevenLabs.Subscription>;
    /**
     * Gets information about the user
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await elevenLabs.user.get()
     */
    get(requestOptions?: User.RequestOptions): Promise<ElevenLabs.User>;
}
