{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://kl-angular-mentions/lib/mention-utils.ts","ng://kl-angular-mentions/lib/caret-coords.ts","ng://kl-angular-mentions/lib/mention-list.component.ts","ng://kl-angular-mentions/lib/mention.directive.ts","ng://kl-angular-mentions/lib/mention.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","create","getValue","el","isInputOrTextAreaElement","value","textContent","insertValue","start","end","insertHTML","text","iframe","noRecursion","nodeName","isTextElement","val","setValue","substring","setCaretPosition","selObj","getWindowSelection","rangeCount","HTMLElement","e","getDocument","createElement","innerHTML","makeAngularElements","setAttribute","children","anchorNode","beforeString","afterString","isEnterKey","hasChildNodes","firstChild","parentElement","contentHTML","contentToReplace","innerText","replace","indexOf","nodeValue","substr","positionChar","lastIndexOf","removeChild","beforeEl","afterEl","parentNode","insertBefore","nextSibling","range","createRange","selectNode","setStart","setEnd","collapse","removeAllRanges","addRange","insertElement","position","getRangeAt","startOffset","pos","selectionStart","setSelectionRange","sel","getCaretPosition","slice","selRange","preCaretRange","cloneRange","selectNodeContents","endContainer","endOffset","toString","contentWindow","document","getSelection","window","getContentEditableCaretCoords","ctx","markerId","Date","getTime","Math","random","doc","prevRange","markerEl","id","appendChild","createTextNode","insertNode","coordinates","left","top","offsetHeight","element","obj","parent","offsetLeft","clientLeft","offsetTop","clientTop","offsetParent","body","scrollTop","scrollLeft","localToRelativeCoordinates","properties","isBrowser","isFirefox","MentionListComponent","this","labelKey","itemClick","EventEmitter","items","activeIndex","hidden","dropUp","styleOff","coords","offset","prototype","ngAfterContentChecked","itemTemplate","defaultItemTemplate","nativeParentElement","options","Error","debug","querySelector","div","style","computed","getComputedStyle","currentStyle","isInput","whiteSpace","wordWrap","visibility","forEach","prop","boxSizing","height","parseInt","outerHeight","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","targetHeight","lineHeight","scrollHeight","overflowY","overflow","span","backgroundColor","getCaretCoordinates","getBlockCursorDimensions","context","documentElement","pageXOffset","pageYOffset","caretRelativeToView","parentRelativeToContainer","getBoundingClientRect","positionElement","activateNextItem","listEl","list","nativeElement","activeEl","getElementsByClassName","item","nextLiEl","nextLiRect","bottom","clientHeight","max","min","activatePreviousItem","prevLiEl","previousSibling","reset","checkBounds","bounds","width","innerWidth","className","parentStyles","parseFloat","fontSize","ElementRef","tslib_1.__decorate","Input","TemplateRef","Output","ViewChild","static","Component","selector","template","MentionDirective","_element","_componentResolver","_viewContainerRef","_this","mentionConfig","DEFAULT_CONFIG","triggerChar","maxItems","allowSpace","returnTrigger","mentionSelect","activeConfig","searchTerm","itemSelected","opened","closed","triggerChars","mentionItems","ngOnChanges","changes","updateConfig","config","addConfig","mentions","defaults","assign","map","label","object","filter","disableSort","sort","a","b","localeCompare","updateSearchList","setIframe","stopEvent","event","wasClick","preventDefault","stopPropagation","stopImmediatePropagation","blurHandler","stopSearch","inputHandler","lastKeyCode","data","keyCode","charCodeAt","keyHandler","inputEvent","isComposing","charPressed","charCode","which","shiftKey","String","fromCharCode","startPos","startNode","searching","searchString","showSearchList","emit","searchList","metaKey","altKey","ctrlKey","activeItem","evt","createEvent","initEvent","dispatchEvent","mention","startSearch","matches","objects","disableSearch","searchStringLowerCase_1","toLowerCase","startsWith","componentFactory","resolveComponentFactory","componentRef","createComponent","instance","mentionListTemplate","subscribe","focus","fakeKeydown","disableStyle","requestAnimationFrame","ComponentFactoryResolver","ViewContainerRef","Directive","host","(keydown)","(input)","(blur)","autocomplete","MentionModule","NgModule","declarations","imports","CommonModule","exports","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","// DOM element manipulation functions...\r\n//\r\n\r\nfunction setValue(el: HTMLInputElement, value: any) {\r\n  if (isInputOrTextAreaElement(el)) {\r\n    el.value = value;\r\n  }\r\n  else {\r\n    el.textContent = value;\r\n  }\r\n}\r\n\r\nexport function getValue(el: HTMLInputElement) {\r\n  return isInputOrTextAreaElement(el) ? el.value : el.textContent;\r\n}\r\n\r\nexport function insertValue(\r\n  el: HTMLInputElement,\r\n  start: number,\r\n  end: number,\r\n  insertHTML: boolean,\r\n  text: any,\r\n  iframe: HTMLIFrameElement,\r\n  noRecursion: boolean = false\r\n  ) {\r\n    \r\n    if (isTextElement(el)) {\r\n      let val = getValue(el);\r\n      setValue(el, val.substring(0, start) + text + val.substring(end, val.length));\r\n      setCaretPosition(el, start + text.length, iframe);\r\n    }\r\n    else if (!noRecursion) {\r\n      let selObj: Selection = getWindowSelection(iframe);\r\n      //console.log(selObj);\r\n      if (selObj && selObj.rangeCount > 0) {\r\n        // var selRange = selObj.getRangeAt(0);\r\n        // var position = selRange.startOffset;\r\n        // var anchorNode = selObj.anchorNode;\r\n        // if (text.endsWith(' ')) {\r\n        //   text = text.substring(0, text.length-1) + '\\xA0';\r\n        // }\r\n        // insertValue(<HTMLInputElement>anchorNode, position - (end - start), position, text, iframe, true);\r\n        \r\n        if (insertHTML) {\r\n          insertElement(selObj, start, end, text, iframe);\r\n        }\r\n        else {\r\n          var selRange = selObj.getRangeAt(0);\r\n          var position = selRange.startOffset;\r\n          var anchorNode = selObj.anchorNode;\r\n          // if (text.endsWith(' ')) {\r\n          //   text = text.substring(0, text.length-1) + '\\xA0';\r\n          // }\r\n          \r\n          insertValue(<HTMLInputElement>anchorNode, position - (end - start), position, insertHTML, text, iframe, true);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function makeAngularElements(el) {\r\n    if (!(el instanceof HTMLElement)) {\r\n      return;\r\n    }\r\n    el.setAttribute(\"_ngcontent-c0\", '');\r\n    for (let i in el.children) {\r\n      makeAngularElements(el.children[i])\r\n    }\r\n  }\r\n  \r\n  \r\n  function insertElement(\r\n    selObj: Selection,\r\n    start: number,\r\n    end: number,\r\n    text: HTMLElement,\r\n    iframe: HTMLIFrameElement\r\n    ) {\r\n      \r\n      //console.log(start, end);\r\n      \r\n      if (!(text instanceof HTMLElement)) {\r\n        var e = getDocument(iframe).createElement(\"span\");\r\n        e.innerHTML = text;\r\n        text = e;\r\n      }\r\n      \r\n      //make the element an angular element\r\n      makeAngularElements(text);\r\n      \r\n      \r\n      var anchorNode = selObj.anchorNode;\r\n      //var anchorNode = selObj.anchorNode.previousSibling;\r\n      //debugger;\r\n      \r\n      //console.log(selObj);\r\n      //console.log(anchorNode);\r\n      //console.log(anchorNode.nodeValue);\r\n      //Get the text that preceeded and followed what was typed as part of the autocomplete\r\n      var beforeString = '';\r\n      var afterString = '';\r\n      var isEnterKey = false;\r\n      \r\n      if(anchorNode.hasChildNodes() && anchorNode.firstChild.parentElement.innerHTML == '<br>')  {\r\n        isEnterKey = true;\r\n        \r\n        var contentHTML = anchorNode.parentElement.innerHTML;\r\n        //var qtyLineBreaks = contentHTML.substring(0, ) .split('')\r\n        var contentToReplace = anchorNode.parentElement.innerText.substring(start, end);\r\n        contentToReplace =  contentToReplace.replace('\\n','');\r\n\r\n        if(contentToReplace.indexOf('@') == -1){\r\n          contentToReplace = '@' + contentToReplace;\r\n        }\r\n        if(text.innerHTML.indexOf('@') == -1 ){\r\n          text.innerHTML = '&#64;' + text.innerHTML;\r\n        }\r\n        contentHTML = contentHTML.replace(contentToReplace, text.innerHTML);\r\n\r\n        anchorNode.parentElement.innerHTML = contentHTML;\r\n        \r\n      } else {\r\n        \r\n         if(anchorNode.nodeValue){\r\n          //console.log(anchorNode);\r\n          beforeString = anchorNode.nodeValue.substr(0, start);\r\n          afterString = anchorNode.nodeValue.substring(end);  \r\n        } else if(anchorNode.textContent){\r\n          beforeString = anchorNode.textContent.substr(0, start);\r\n          afterString = anchorNode.textContent.substring(end);  \r\n        } else {\r\n          beforeString = '';\r\n          afterString = text.innerText.substring(end);  \r\n        }\r\n        \r\n        //console.log(\"beforeString:\",beforeString);\r\n        //console.log(\"afterString:\",afterString);\r\n        \r\n        //removing previous typed search string\r\n        var positionChar = beforeString.lastIndexOf('@');\r\n        \r\n        //console.log(\" positionChar:\", positionChar);\r\n        \r\n        if(positionChar < 0) {\r\n          beforeString = beforeString + '@';\r\n          var positionChar = beforeString.lastIndexOf('@');\r\n          //console.log(\" beforeString 2:\", beforeString);\r\n        }\r\n        \r\n        \r\n        beforeString = beforeString.substring(0,  positionChar + 1);\r\n        //console.log(\"beforeString final:\",beforeString);\r\n        \r\n        //Remove the text\r\n        if(isEnterKey){\r\n          //console.log(anchorNode.parentElement.innerHTML);\r\n          anchorNode.parentElement.innerText = anchorNode.parentElement.innerText.replace('@jos','');\r\n          anchorNode.removeChild(anchorNode.firstChild); // .previousSibling.nodeValue = \"\";\r\n          //anchorNode.previousSibling.textContent = \"\";\r\n        } else {\r\n          anchorNode.nodeValue = \"\";\r\n          anchorNode.textContent = \"\";\r\n        }\r\n        \r\n        \r\n        //Create spans for the preceeding text & following text\r\n        let beforeEl = getDocument(iframe).createElement(\"span\");\r\n        beforeEl.innerText = beforeString;\r\n        let afterEl = getDocument(iframe).createElement(\"span\");\r\n        afterEl.innerText = afterString;\r\n        \r\n        //Insert the spans + the mention element\r\n        //debugger;\r\n        anchorNode.parentNode.insertBefore(afterEl, anchorNode.nextSibling);\r\n        anchorNode.parentNode.insertBefore(text, anchorNode.nextSibling);\r\n        anchorNode.parentNode.insertBefore(beforeEl, anchorNode.nextSibling);\r\n        \r\n        //Create a range located ater the mention\r\n        let range = getDocument(iframe).createRange();\r\n        range.selectNode(afterEl);\r\n        range.setStart(afterEl, 0);\r\n        range.setEnd(afterEl, 0);\r\n        \r\n        //Move the cursor to that spot\r\n        range.collapse(false);\r\n        selObj.removeAllRanges();\r\n        selObj.addRange(range);\r\n      }\r\n      //var htmlNode = beforeEl.innerHTML +  text.innerHTML + afterEl.innerHTML;\r\n      //anchorNode.parentElement.innerHTML =  htmlNode;\r\n      //anchorNode.parentNode.insertBefore(text, anchorNode.nextSibling);\r\n      //anchorNode.parentNode.insertBefore() .insertBefore(beforeEl, anchorNode.nextSibling);\r\n      //return;\r\n      \r\n      \r\n    }\r\n    \r\n    export function isInputOrTextAreaElement(el: HTMLElement): boolean {\r\n      return el != null && (el.nodeName == 'INPUT' || el.nodeName == 'TEXTAREA');\r\n    };\r\n    \r\n    export function isTextElement(el: HTMLElement): boolean {\r\n      return el != null && (el.nodeName == 'INPUT' || el.nodeName == 'TEXTAREA' || el.nodeName == '#text');\r\n    };\r\n    \r\n    export function setCaretPosition(el: HTMLInputElement, pos: number, iframe: HTMLIFrameElement = null) {\r\n      //console.log(\"setCaretPosition\", pos, el, iframe==null);\r\n      if (isInputOrTextAreaElement(el) && el.selectionStart) {\r\n        //el.focus();\r\n        el.setSelectionRange(pos, pos);\r\n      }\r\n      else {\r\n        let range = getDocument(iframe).createRange();\r\n        range.setStart(el, pos);\r\n        range.collapse(true);\r\n        let sel = getWindowSelection(iframe);\r\n        sel.removeAllRanges();\r\n        sel.addRange(range);\r\n      }\r\n    }\r\n    \r\n    export function getCaretPosition(el: HTMLInputElement, iframe: HTMLIFrameElement = null) {\r\n      //console.log(\"getCaretPosition\", el);\r\n      if (isInputOrTextAreaElement(el)) {\r\n        var val = el.value;\r\n        return val.slice(0, el.selectionStart).length;\r\n      }\r\n      else {\r\n        var selObj = getWindowSelection(iframe); //window.getSelection();\r\n        if (selObj.rangeCount > 0) {\r\n          var selRange = selObj.getRangeAt(0);\r\n          var preCaretRange = selRange.cloneRange();\r\n          preCaretRange.selectNodeContents(el);\r\n          preCaretRange.setEnd(selRange.endContainer, selRange.endOffset);\r\n          var position = preCaretRange.toString().length;\r\n          return position;\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Based on ment.io functions...\r\n    //\r\n    \r\n    function getDocument(iframe: HTMLIFrameElement) {\r\n      if (!iframe) {\r\n        return document;\r\n      } else {\r\n        return iframe.contentWindow.document;\r\n      }\r\n    }\r\n    \r\n    function getWindowSelection(iframe: HTMLIFrameElement): Selection {\r\n      if (!iframe) {\r\n        //console.log(window.getSelection());\r\n        return window.getSelection();\r\n      } else {\r\n        return iframe.contentWindow.getSelection();\r\n      }\r\n    }\r\n    \r\n    export function getContentEditableCaretCoords(ctx: { iframe: HTMLIFrameElement, parent?: Element }) {\r\n      let markerTextChar = '\\ufeff';\r\n      let markerId = 'sel_' + new Date().getTime() + '_' + Math.random().toString().substr(2);\r\n      let doc = getDocument(ctx ? ctx.iframe : null);\r\n      let sel = getWindowSelection(ctx ? ctx.iframe : null);\r\n      let prevRange = sel.getRangeAt(0);\r\n      \r\n      // create new range and set postion using prevRange\r\n      let range = doc.createRange();\r\n      range.setStart(sel.anchorNode, prevRange.startOffset);\r\n      range.setEnd(sel.anchorNode, prevRange.startOffset);\r\n      range.collapse(false);\r\n      \r\n      // Create the marker element containing a single invisible character\r\n      // using DOM methods and insert it at the position in the range\r\n      let markerEl = doc.createElement('span');\r\n      markerEl.id = markerId;\r\n      markerEl.appendChild(doc.createTextNode(markerTextChar));\r\n      range.insertNode(markerEl);\r\n      sel.removeAllRanges();\r\n      sel.addRange(prevRange);\r\n      \r\n      let coordinates = {\r\n        left: 0,\r\n        top: markerEl.offsetHeight\r\n      };\r\n      \r\n      localToRelativeCoordinates(ctx, markerEl, coordinates);\r\n      \r\n      markerEl.parentNode.removeChild(markerEl);\r\n      return coordinates;\r\n    }\r\n    \r\n    function localToRelativeCoordinates(\r\n      ctx: { iframe: HTMLIFrameElement, parent?: Element },\r\n      element: Element,\r\n      coordinates: { top: number; left: number }\r\n      ) {\r\n        let obj = <HTMLElement>element;\r\n        let iframe = ctx ? ctx.iframe : null;\r\n        while (obj) {\r\n          if (ctx.parent != null && ctx.parent == obj) {\r\n            break;\r\n          }\r\n          coordinates.left += obj.offsetLeft + obj.clientLeft;\r\n          coordinates.top += obj.offsetTop + obj.clientTop;\r\n          obj = <HTMLElement>obj.offsetParent;\r\n          if (!obj && iframe) {\r\n            obj = iframe;\r\n            iframe = null;\r\n          }\r\n        }\r\n        obj = <HTMLElement>element;\r\n        iframe = ctx ? ctx.iframe : null;\r\n        while (obj !== getDocument(null).body && obj != null) {\r\n          if (ctx.parent != null && ctx.parent == obj) {\r\n            break;\r\n          }\r\n          if (obj.scrollTop && obj.scrollTop > 0) {\r\n            coordinates.top -= obj.scrollTop;\r\n          }\r\n          if (obj.scrollLeft && obj.scrollLeft > 0) {\r\n            coordinates.left -= obj.scrollLeft;\r\n          }\r\n          obj = <HTMLElement>obj.parentNode;\r\n          if (!obj && iframe) {\r\n            obj = iframe;\r\n            iframe = null;\r\n          }\r\n        }\r\n      }\r\n      ","/* From: https://github.com/component/textarea-caret-position */\r\n/* jshint browser: true */\r\n\r\n// (function () {\r\n\r\n  // We'll copy the properties below into the mirror div.\r\n  // Note that some browsers, such as Firefox, do not concatenate properties\r\n  // into their shorthand (e.g. padding-top, padding-bottom etc. -> padding),\r\n  // so we have to list every single property explicitly.\r\n  var properties = [\r\n    'direction',  // RTL support\r\n    'boxSizing',\r\n    'width',  // on Chrome and IE, exclude the scrollbar, so the mirror div wraps exactly as the textarea does\r\n    'height',\r\n    'overflowX',\r\n    'overflowY',  // copy the scrollbar for IE\r\n\r\n    'borderTopWidth',\r\n    'borderRightWidth',\r\n    'borderBottomWidth',\r\n    'borderLeftWidth',\r\n    'borderStyle',\r\n\r\n    'paddingTop',\r\n    'paddingRight',\r\n    'paddingBottom',\r\n    'paddingLeft',\r\n\r\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font\r\n    'fontStyle',\r\n    'fontVariant',\r\n    'fontWeight',\r\n    'fontStretch',\r\n    'fontSize',\r\n    'fontSizeAdjust',\r\n    'lineHeight',\r\n    'fontFamily',\r\n\r\n    'textAlign',\r\n    'textTransform',\r\n    'textIndent',\r\n    'textDecoration',  // might not make a difference, but better be safe\r\n\r\n    'letterSpacing',\r\n    'wordSpacing',\r\n\r\n    'tabSize',\r\n    'MozTabSize'\r\n\r\n  ];\r\n\r\n  var isBrowser = (typeof window !== 'undefined');\r\n  var isFirefox = (isBrowser && window['mozInnerScreenX'] != null);\r\n\r\n  export function getCaretCoordinates(element, position, options) {\r\n    if (!isBrowser) {\r\n      throw new Error('textarea-caret-position#getCaretCoordinates should only be called in a browser');\r\n    }\r\n\r\n    var debug = options && options.debug || false;\r\n    if (debug) {\r\n      var el = document.querySelector('#input-textarea-caret-position-mirror-div');\r\n      if (el) el.parentNode.removeChild(el);\r\n    }\r\n\r\n    // The mirror div will replicate the textarea's style\r\n    var div = document.createElement('div');\r\n    div.id = 'input-textarea-caret-position-mirror-div';\r\n    document.body.appendChild(div);\r\n\r\n    var style = div.style;\r\n    var computed = window.getComputedStyle ? window.getComputedStyle(element) : element.currentStyle;  // currentStyle for IE < 9\r\n    var isInput = element.nodeName === 'INPUT';\r\n\r\n    // Default textarea styles\r\n    style.whiteSpace = 'pre-wrap';\r\n    if (!isInput)\r\n      style.wordWrap = 'break-word';  // only for textarea-s\r\n\r\n    // Position off-screen\r\n    style.position = 'absolute';  // required to return coordinates properly\r\n    if (!debug)\r\n      style.visibility = 'hidden';  // not 'display: none' because we want rendering\r\n\r\n    // Transfer the element's properties to the div\r\n    properties.forEach(function (prop) {\r\n      if (isInput && prop === 'lineHeight') {\r\n        // Special case for <input>s because text is rendered centered and line height may be != height\r\n        if (computed.boxSizing === \"border-box\") {\r\n          var height = parseInt(computed.height);\r\n          var outerHeight =\r\n            parseInt(computed.paddingTop) +\r\n            parseInt(computed.paddingBottom) +\r\n            parseInt(computed.borderTopWidth) +\r\n            parseInt(computed.borderBottomWidth);\r\n          var targetHeight = outerHeight + parseInt(computed.lineHeight);\r\n          if (height > targetHeight) {\r\n            style.lineHeight = height - outerHeight + \"px\";\r\n          } else if (height === targetHeight) {\r\n            style.lineHeight = computed.lineHeight;\r\n          } else {\r\n            style.lineHeight = '0';\r\n          }\r\n        } else {\r\n          style.lineHeight = computed.height;\r\n        }\r\n      } else {\r\n        style[prop] = computed[prop];\r\n      }\r\n    });\r\n\r\n    if (isFirefox) {\r\n      // Firefox lies about the overflow property for textareas: https://bugzilla.mozilla.org/show_bug.cgi?id=984275\r\n      if (element.scrollHeight > parseInt(computed.height))\r\n        style.overflowY = 'scroll';\r\n    } else {\r\n      style.overflow = 'hidden';  // for Chrome to not render a scrollbar; IE keeps overflowY = 'scroll'\r\n    }\r\n\r\n    div.textContent = element.value.substring(0, position);\r\n    // The second special handling for input type=\"text\" vs textarea:\r\n    // spaces need to be replaced with non-breaking spaces - http://stackoverflow.com/a/13402035/1269037\r\n    if (isInput)\r\n      div.textContent = div.textContent.replace(/\\s/g, '\\u00a0');\r\n\r\n    var span = document.createElement('span');\r\n    // Wrapping must be replicated *exactly*, including when a long word gets\r\n    // onto the next line, with whitespace at the end of the line before (#7).\r\n    // The  *only* reliable way to do that is to copy the *entire* rest of the\r\n    // textarea's content into the <span> created at the caret position.\r\n    // For inputs, just '.' would be enough, but no need to bother.\r\n    span.textContent = element.value.substring(position) || '.';  // || because a completely empty faux span doesn't render at all\r\n    div.appendChild(span);\r\n\r\n    var coordinates = {\r\n      top: span.offsetTop + parseInt(computed['borderTopWidth']),\r\n      left: span.offsetLeft + parseInt(computed['borderLeftWidth']),\r\n      height: parseInt(computed['lineHeight'])\r\n    };\r\n\r\n    if (debug) {\r\n      span.style.backgroundColor = '#aaa';\r\n    } else {\r\n      document.body.removeChild(div);\r\n    }\r\n\r\n    return coordinates;\r\n  }\r\n\r\n  // if (typeof module != 'undefined' && typeof module.exports != 'undefined') {\r\n  //   module.exports = getCaretCoordinates;\r\n  // } else if(isBrowser) {\r\n  //   window.getCaretCoordinates = getCaretCoordinates;\r\n  // }\r\n\r\n  // }());","import {\r\n  Component, ElementRef, Output, EventEmitter, ViewChild, Input, TemplateRef, AfterContentChecked\r\n} from '@angular/core';\r\n\r\nimport { isInputOrTextAreaElement, getContentEditableCaretCoords } from './mention-utils';\r\nimport { getCaretCoordinates } from './caret-coords';\r\n\r\n/**\r\n * Angular Mentions.\r\n * https://github.com/dmacfarlane/angular-mentions\r\n *\r\n * Copyright (c) 2016 Dan MacFarlane\r\n */\r\n@Component({\r\n  selector: 'mention-list',\r\n  styleUrls: ['./mention-list.component.scss'],\r\n  template: `\r\n    <ng-template #defaultItemTemplate let-item=\"item\">\r\n      {{item[labelKey]}}\r\n    </ng-template>\r\n    <ul #list [hidden]=\"hidden\" class=\"dropdown-menu scrollable-menu\"\r\n      [class.mention-menu]=\"!styleOff\" [class.mention-dropdown]=\"!styleOff && dropUp\">\r\n      <li *ngFor=\"let item of items; let i = index\"\r\n        [class.active]=\"activeIndex==i\" [class.mention-active]=\"!styleOff && activeIndex==i\">\r\n        <a class=\"dropdown-item\" [class.mention-item]=\"!styleOff\"\r\n          (mousedown)=\"activeIndex=i;itemClick.emit();$event.preventDefault()\">\r\n          <ng-template [ngTemplateOutlet]=\"itemTemplate\" [ngTemplateOutletContext]=\"{'item':item}\"></ng-template>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n    `\r\n})\r\nexport class MentionListComponent implements AfterContentChecked {\r\n  @Input() labelKey: string = 'label';\r\n  @Input() itemTemplate: TemplateRef<any>;\r\n  @Output() itemClick = new EventEmitter();\r\n  @ViewChild('list', { static: true }) list: ElementRef;\r\n  @ViewChild('defaultItemTemplate', { static: true }) defaultItemTemplate: TemplateRef<any>;\r\n  items = [];\r\n  activeIndex: number = 0;\r\n  hidden: boolean = false;\r\n  dropUp: boolean = false;\r\n  styleOff: boolean = false;\r\n  private coords: {top:number, left:number} = {top:0, left:0};\r\n  private offset: number = 0;\r\n  constructor(private element: ElementRef) {}\r\n\r\n  ngAfterContentChecked() {\r\n    if (!this.itemTemplate) {\r\n      this.itemTemplate = this.defaultItemTemplate;\r\n    }\r\n  }\r\n\r\n  // lots of confusion here between relative coordinates and containers\r\n  position(nativeParentElement: HTMLInputElement, iframe: HTMLIFrameElement = null) {\r\n    if (isInputOrTextAreaElement(nativeParentElement)) {\r\n      // parent elements need to have postition:relative for this to work correctly?\r\n      this.coords = getCaretCoordinates(nativeParentElement, nativeParentElement.selectionStart, null);\r\n      this.coords.top = nativeParentElement.offsetTop + this.coords.top - nativeParentElement.scrollTop;\r\n      this.coords.left = nativeParentElement.offsetLeft + this.coords.left - nativeParentElement.scrollLeft;\r\n      // getCretCoordinates() for text/input elements needs an additional offset to position the list correctly\r\n      this.offset = this.getBlockCursorDimensions(nativeParentElement).height;\r\n    }\r\n    else if (iframe) {\r\n      let context: { iframe: HTMLIFrameElement, parent: Element } = { iframe: iframe, parent: iframe.offsetParent };\r\n      this.coords = getContentEditableCaretCoords(context);\r\n    }\r\n    else {\r\n      let doc = document.documentElement;\r\n      let scrollLeft = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\r\n      let scrollTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n      // bounding rectangles are relative to view, offsets are relative to container?\r\n      let caretRelativeToView = getContentEditableCaretCoords({ iframe: iframe });\r\n      let parentRelativeToContainer: ClientRect = nativeParentElement.getBoundingClientRect();\r\n      this.coords.top = caretRelativeToView.top - parentRelativeToContainer.top + nativeParentElement.offsetTop - scrollTop;\r\n      this.coords.left = caretRelativeToView.left - parentRelativeToContainer.left + nativeParentElement.offsetLeft - scrollLeft;\r\n    }\r\n    // set the default/inital position\r\n    this.positionElement();\r\n  }\r\n\r\n  get activeItem() {\r\n    return this.items[this.activeIndex];\r\n  }\r\n\r\n  activateNextItem() {\r\n    // adjust scrollable-menu offset if the next item is out of view\r\n    let listEl: HTMLElement = this.list.nativeElement;\r\n    let activeEl = listEl.getElementsByClassName('active').item(0);\r\n    if (activeEl) {\r\n      let nextLiEl: HTMLElement = <HTMLElement> activeEl.nextSibling;\r\n      if (nextLiEl && nextLiEl.nodeName == \"LI\") {\r\n        let nextLiRect: ClientRect = nextLiEl.getBoundingClientRect();\r\n        if (nextLiRect.bottom > listEl.getBoundingClientRect().bottom) {\r\n          listEl.scrollTop = nextLiEl.offsetTop + nextLiRect.height - listEl.clientHeight;\r\n        }\r\n      }\r\n    }\r\n    // select the next item\r\n    this.activeIndex = Math.max(Math.min(this.activeIndex + 1, this.items.length - 1), 0);\r\n  }\r\n\r\n  activatePreviousItem() {\r\n    // adjust the scrollable-menu offset if the previous item is out of view\r\n    let listEl: HTMLElement = this.list.nativeElement;\r\n    let activeEl = listEl.getElementsByClassName('active').item(0);\r\n    if (activeEl) {\r\n      let prevLiEl: HTMLElement = <HTMLElement> activeEl.previousSibling;\r\n      if (prevLiEl && prevLiEl.nodeName == \"LI\") {\r\n        let prevLiRect: ClientRect = prevLiEl.getBoundingClientRect();\r\n        if (prevLiRect.top < listEl.getBoundingClientRect().top) {\r\n          listEl.scrollTop = prevLiEl.offsetTop;\r\n        }\r\n      }\r\n    }\r\n    // select the previous item\r\n    this.activeIndex = Math.max(Math.min(this.activeIndex - 1, this.items.length - 1), 0);\r\n  }\r\n\r\n  // reset for a new mention search\r\n  reset() {\r\n    this.list.nativeElement.scrollTop = 0;\r\n    this.checkBounds();\r\n  }\r\n\r\n  // final positioning is done after the list is shown (and the height and width are known)\r\n  // ensure it's in the page bounds\r\n  private checkBounds() {\r\n    let left = this.coords.left, top = this.coords.top, dropUp = this.dropUp;\r\n    const bounds: ClientRect = this.list.nativeElement.getBoundingClientRect();\r\n    // if off right of page, align right\r\n    if (bounds.left + bounds.width > window.innerWidth) {\r\n      left -= bounds.left + bounds.width - window.innerWidth + 10;\r\n    }\r\n    // if more than half off the bottom of the page, force dropUp\r\n    // if ((bounds.top+bounds.height/2)>window.innerHeight) {\r\n    //   dropUp = true;\r\n    // }\r\n    // if top is off page, disable dropUp\r\n    if (bounds.top<0) {\r\n      dropUp = false;\r\n    }\r\n    // set the revised/final position\r\n    this.positionElement(left, top, dropUp);\r\n  }\r\n\r\n  private positionElement(left:number=this.coords.left, top:number=this.coords.top, dropUp:boolean=this.dropUp) {\r\n    \r\n    const el: HTMLElement = this.element.nativeElement;\r\n    top += dropUp ? 0 : this.offset; // top of list is next line\r\n    el.className = dropUp ? 'dropup' : null;\r\n    el.style.position = \"absolute\";\r\n    el.style.left = left + 'px';\r\n    el.style.top = top + 'px';\r\n  }\r\n\r\n  private getBlockCursorDimensions(nativeParentElement: HTMLInputElement) {\r\n    const parentStyles = window.getComputedStyle(nativeParentElement);\r\n    return {\r\n      height: parseFloat(parentStyles.lineHeight),\r\n      width: parseFloat(parentStyles.fontSize)\r\n    };\r\n  }\r\n}\r\n","import { ComponentFactoryResolver, Directive, ElementRef, TemplateRef, ViewContainerRef } from \"@angular/core\";\r\nimport { EventEmitter, Input, OnChanges, Output, SimpleChanges } from \"@angular/core\";\r\nimport { getCaretPosition, getValue, insertValue, setCaretPosition } from './mention-utils';\r\n\r\nimport { MentionConfig } from \"./mention-config\";\r\nimport { MentionListComponent } from './mention-list.component';\r\n\r\nconst KEY_BACKSPACE = 8;\r\nconst KEY_TAB = 9;\r\nconst KEY_ENTER = 13;\r\nconst KEY_SHIFT = 16;\r\nconst KEY_ESCAPE = 27;\r\nconst KEY_SPACE = 32;\r\nconst KEY_LEFT = 37;\r\nconst KEY_UP = 38;\r\nconst KEY_RIGHT = 39;\r\nconst KEY_DOWN = 40;\r\nconst KEY_BUFFERED = 229;\r\n\r\n/**\r\n* Angular Mentions.\r\n* https://github.com/dmacfarlane/angular-mentions\r\n*\r\n* Copyright (c) 2017 Dan MacFarlane\r\n*/\r\n@Directive({\r\n  selector: '[mention], [mentionConfig]',\r\n  host: {\r\n    '(keydown)': 'keyHandler($event)',\r\n    '(input)': 'inputHandler($event)',\r\n    '(blur)': 'blurHandler($event)',\r\n    'autocomplete': 'off'\r\n  }\r\n})\r\nexport class MentionDirective implements OnChanges {\r\n  \r\n  // stores the items passed to the mentions directive and used to populate the root items in mentionConfig\r\n  private mentionItems: any[];\r\n  \r\n  @Input('mention') set mention(items: any[]) {\r\n    this.mentionItems = items;\r\n  }\r\n  \r\n  // the provided configuration object\r\n  @Input() mentionConfig: MentionConfig = { items: [] };\r\n  \r\n  private activeConfig: MentionConfig;\r\n  \r\n  private DEFAULT_CONFIG: MentionConfig = {\r\n    items: [],\r\n    triggerChar: '@',\r\n    labelKey: 'label',\r\n    maxItems: -1,\r\n    allowSpace: false,\r\n    returnTrigger: true,\r\n    insertHTML: true,\r\n    mentionSelect: (item: any, triggerChar?:string) => this.activeConfig.triggerChar + item[this.activeConfig.labelKey]\r\n  }\r\n  \r\n  // template to use for rendering list items\r\n  @Input() mentionListTemplate: TemplateRef<any>;\r\n  \r\n  // event emitted whenever the search term changes\r\n  @Output() searchTerm = new EventEmitter<string>();\r\n  \r\n  // event emitted when an item is selected\r\n  @Output() itemSelected = new EventEmitter<any>();\r\n  \r\n  // event emitted whenever the mention list is opened or closed\r\n  @Output() opened = new EventEmitter();\r\n  @Output() closed = new EventEmitter();\r\n  \r\n  private triggerChars: { [key: string]: MentionConfig } = {};\r\n  \r\n  private searchString: string;\r\n  private startPos: number;\r\n  private startNode;\r\n  private searchList: MentionListComponent;\r\n  private searching: boolean;\r\n  private iframe: any; // optional\r\n  private lastKeyCode: number;\r\n  \r\n  constructor(\r\n    private _element: ElementRef,\r\n    private _componentResolver: ComponentFactoryResolver,\r\n    private _viewContainerRef: ViewContainerRef\r\n    ) { }\r\n    \r\n    ngOnChanges(changes: SimpleChanges) {\r\n      // console.log('config change', changes);\r\n      if (changes['mention'] || changes['mentionConfig']) {\r\n        this.updateConfig();\r\n      }\r\n    }\r\n    \r\n    public updateConfig() {\r\n      let config = this.mentionConfig;\r\n      this.triggerChars = {};\r\n      // use items from directive if they have been set\r\n      if (this.mentionItems) {\r\n        config.items = this.mentionItems;\r\n      }\r\n      this.addConfig(config);\r\n      // nested configs\r\n      if (config.mentions) {\r\n        config.mentions.forEach(config => this.addConfig(config));\r\n      }\r\n    }\r\n    \r\n    // add configuration for a trigger char\r\n    private addConfig(config: MentionConfig) {\r\n      // defaults\r\n      let defaults = Object.assign({}, this.DEFAULT_CONFIG);\r\n      config = Object.assign(defaults, config);\r\n      // items\r\n      let items = config.items;\r\n      if (items && items.length > 0) {\r\n        // convert strings to objects\r\n        if (typeof items[0] == 'string') {\r\n          items = items.map((label) => {\r\n            let object = {};\r\n            object[config.labelKey] = label;\r\n            return object;\r\n          });\r\n        }\r\n        if (config.labelKey) {\r\n          // remove items without an labelKey (as it's required to filter the list)\r\n          items = items.filter(e => e[config.labelKey]);\r\n          if (!config.disableSort) {\r\n            items.sort((a, b) => a[config.labelKey].localeCompare(b[config.labelKey]));\r\n          }\r\n        }\r\n      }\r\n      config.items = items;\r\n      \r\n      // add the config\r\n      this.triggerChars[config.triggerChar] = config;\r\n      \r\n      // for async update while menu/search is active\r\n      if (this.activeConfig && this.activeConfig.triggerChar == config.triggerChar) {\r\n        this.activeConfig = config;\r\n        this.updateSearchList();\r\n      }\r\n    }\r\n    \r\n    setIframe(iframe: HTMLIFrameElement) {\r\n      this.iframe = iframe;\r\n    }\r\n    \r\n    stopEvent(event: any) {\r\n      //if (event instanceof KeyboardEvent) { // does not work for iframe\r\n      \r\n      if (!event.wasClick) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        event.stopImmediatePropagation();\r\n        //return false;\r\n      }\r\n    }\r\n    \r\n    blurHandler(event: any) {\r\n      this.stopEvent(event);\r\n      this.stopSearch();\r\n    }\r\n    \r\n    inputHandler(event: any, nativeElement: HTMLInputElement = this._element.nativeElement) {\r\n      if (this.lastKeyCode === KEY_BUFFERED && event.data) {\r\n        let keyCode = event.data.charCodeAt(0);\r\n        this.keyHandler({ keyCode, inputEvent: true }, nativeElement);\r\n      }\r\n    }\r\n    \r\n    // @param nativeElement is the alternative text element in an iframe scenario\r\n    keyHandler(event: any, nativeElement: HTMLInputElement = this._element.nativeElement) {\r\n      this.lastKeyCode = event.keyCode;\r\n      \r\n      if (event.isComposing || event.keyCode === KEY_BUFFERED) {\r\n        return;\r\n      }\r\n      \r\n      let val: string = getValue(nativeElement);\r\n      //console.log(val);\r\n      let pos = getCaretPosition(nativeElement, this.iframe);\r\n      //pos = pos - 170;\r\n      //console.log('pos inicial:' + pos);\r\n      \r\n      let charPressed = event.key;\r\n      if (!charPressed) {\r\n        let charCode = event.which || event.keyCode;\r\n        if (!event.shiftKey && (charCode >= 65 && charCode <= 90)) {\r\n          charPressed = String.fromCharCode(charCode + 32);\r\n        }\r\n        // else if (event.shiftKey && charCode === KEY_2) {\r\n        //   charPressed = this.config.triggerChar;\r\n        // }\r\n        else {\r\n          // TODO (dmacfarlane) fix this for non-alpha keys\r\n          // http://stackoverflow.com/questions/2220196/how-to-decode-character-pressed-from-jquerys-keydowns-event-handler?lq=1\r\n          charPressed = String.fromCharCode(event.which || event.keyCode);\r\n        }\r\n      }\r\n      if (event.keyCode == KEY_ENTER && event.wasClick && pos < this.startPos) {\r\n        // put caret back in position prior to contenteditable menu click\r\n        pos = this.startNode.length;\r\n        setCaretPosition(this.startNode, pos, this.iframe);\r\n      }\r\n      //console.log(\"keyHandler\", this.startPos, pos, val, charPressed, event);\r\n      \r\n      let config = this.triggerChars[charPressed];\r\n      if (config) {\r\n        this.activeConfig = config;\r\n        this.startPos = event.inputEvent ? pos - 1 : pos;\r\n        this.startNode = (this.iframe ? this.iframe.contentWindow.getSelection() : window.getSelection()).anchorNode;\r\n        this.searching = true;\r\n        this.searchString = null;\r\n        this.showSearchList(nativeElement);\r\n        this.updateSearchList();\r\n        \r\n        if (config.returnTrigger) {\r\n          this.searchTerm.emit(config.triggerChar);\r\n        }\r\n        \r\n      }\r\n      else if (this.startPos >= 0 && this.searching) {\r\n        if (pos <= this.startPos) {\r\n          this.searchList.hidden = true;\r\n        }\r\n        // ignore shift when pressed alone, but not when used with another key\r\n        else if (event.keyCode !== KEY_SHIFT &&\r\n          !event.metaKey &&\r\n          !event.altKey &&\r\n          !event.ctrlKey &&\r\n          pos > this.startPos\r\n          ) {\r\n            if (!this.activeConfig.allowSpace && event.keyCode === KEY_SPACE) {\r\n              this.startPos = -1;\r\n            }\r\n            else if (event.keyCode === KEY_BACKSPACE && pos > 0) {\r\n              pos--;\r\n              if (pos == this.startPos) {\r\n                this.stopSearch();\r\n              }\r\n            }\r\n            else if (!this.searchList.hidden) {\r\n              \r\n              if (event.keyCode === KEY_TAB || event.keyCode === KEY_ENTER) {\r\n                \r\n                //issues with primeNG editor, when pressed ENTER\r\n                //this.stopEvent(event);\r\n                \r\n                if (event.keyCode === KEY_ENTER && !event.wasClick ) {\r\n                  if(pos - 170 > 0){\r\n                    pos = pos - 170;\r\n                    this.startPos = this.startPos - 170;\r\n                  }\r\n                }\r\n                \r\n                //console.log('evento stopped ' + event.keyCode);\r\n                // emit the selected list item\r\n                this.itemSelected.emit(this.searchList.activeItem);\r\n                // optional function to format the selected item before inserting the text\r\n                const text = this.activeConfig.mentionSelect(this.searchList.activeItem, this.activeConfig.triggerChar);\r\n                //console.log(text);\r\n                //console.log(nativeElement);\r\n                //console.log(this.startPos);\r\n                //console.log(pos);\r\n                // value is inserted without a trailing space for consistency\r\n                // between element types (div and iframe do not preserve the space)\r\n                insertValue(nativeElement, this.startPos, pos, this.activeConfig.insertHTML, text, this.iframe);\r\n                // fire input event so angular bindings are updated\r\n                if (\"createEvent\" in document) {\r\n                  let evt = document.createEvent(\"HTMLEvents\");\r\n                  if (this.iframe) {\r\n                    // a 'change' event is required to trigger tinymce updates\r\n                    evt.initEvent(\"change\", true, false);\r\n                  }\r\n                  else {\r\n                    evt.initEvent(\"input\", true, false);\r\n                  }\r\n                  // this seems backwards, but fire the event from this elements nativeElement (not the\r\n                  // one provided that may be in an iframe, as it won't be propogate)\r\n                  this._element.nativeElement.dispatchEvent(evt);\r\n                }\r\n                this.startPos = -1;\r\n                this.stopSearch();\r\n                return false;\r\n              }\r\n              else if (event.keyCode === KEY_ESCAPE) {\r\n                this.stopEvent(event);\r\n                this.stopSearch();\r\n                return false;\r\n              }\r\n              else if (event.keyCode === KEY_DOWN) {\r\n                this.stopEvent(event);\r\n                this.searchList.activateNextItem();\r\n                return false;\r\n              }\r\n              else if (event.keyCode === KEY_UP) {\r\n                this.stopEvent(event);\r\n                this.searchList.activatePreviousItem();\r\n                return false;\r\n              }\r\n            }\r\n            \r\n            if (charPressed.length!=1 && event.keyCode!=KEY_BACKSPACE) {\r\n              this.stopEvent(event);\r\n              return false;\r\n            }\r\n            else if (this.searching) {\r\n              let mention = val.substring(this.startPos + 1, pos);\r\n              if (event.keyCode !== KEY_BACKSPACE && !event.inputEvent) {\r\n                mention += charPressed;\r\n              }\r\n              this.searchString = mention;\r\n              if (this.activeConfig.returnTrigger) {\r\n                const triggerChar = (this.searchString || event.keyCode === KEY_BACKSPACE) ? val.substring(this.startPos, this.startPos + 1) : '';\r\n                this.searchTerm.emit(triggerChar + this.searchString);\r\n              } \r\n              else {\r\n                this.searchTerm.emit(this.searchString);\r\n              }\r\n              this.updateSearchList();\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      // exposed for external calls to open the mention list, e.g. by clicking a button\r\n      public startSearch(triggerChar?: string, nativeElement: HTMLInputElement = this._element.nativeElement) {\r\n        triggerChar = triggerChar || this.mentionConfig.triggerChar || this.DEFAULT_CONFIG.triggerChar;\r\n        const pos = getCaretPosition(nativeElement, this.iframe);\r\n        insertValue(nativeElement, pos, pos, this.activeConfig.insertHTML, triggerChar, this.iframe);\r\n        this.keyHandler({ key: triggerChar, inputEvent: true }, nativeElement);\r\n      }\r\n      \r\n      stopSearch() {\r\n        if (this.searchList && !this.searchList.hidden) {\r\n          this.searchList.hidden = true;\r\n          this.closed.emit();\r\n        }\r\n        this.activeConfig = null;\r\n        this.searching = false;\r\n      }\r\n      \r\n      updateSearchList() {\r\n        let matches: any[] = [];\r\n        if (this.activeConfig && this.activeConfig.items) {\r\n          let objects = this.activeConfig.items;\r\n          // disabling the search relies on the async operation to do the filtering\r\n          if (!this.activeConfig.disableSearch && this.searchString && this.activeConfig.labelKey) {\r\n            let searchStringLowerCase = this.searchString.toLowerCase();\r\n            objects = objects.filter(e => e[this.activeConfig.labelKey].toLowerCase().startsWith(searchStringLowerCase));\r\n          }\r\n          matches = objects;\r\n          if (this.activeConfig.maxItems > 0) {\r\n            matches = matches.slice(0, this.activeConfig.maxItems);\r\n          }\r\n        }\r\n        // update the search list\r\n        if (this.searchList) {\r\n          this.searchList.items = matches;\r\n          this.searchList.hidden = matches.length == 0;\r\n        }\r\n      }\r\n      \r\n      showSearchList(nativeElement: HTMLInputElement) {\r\n        this.opened.emit();\r\n        \r\n        if (this.searchList == null) {\r\n          let componentFactory = this._componentResolver.resolveComponentFactory(MentionListComponent);\r\n          let componentRef = this._viewContainerRef.createComponent(componentFactory);\r\n          this.searchList = componentRef.instance;\r\n          this.searchList.itemTemplate = this.mentionListTemplate;\r\n          \r\n          componentRef.instance['itemClick'].subscribe(() => {\r\n            nativeElement.focus();\r\n            let fakeKeydown = { key: 'Enter', keyCode: KEY_ENTER, wasClick: true };\r\n            this.keyHandler(fakeKeydown, nativeElement);\r\n          });\r\n        }\r\n        this.searchList.labelKey = this.activeConfig.labelKey;\r\n        this.searchList.dropUp = this.activeConfig.dropUp;\r\n        this.searchList.styleOff = this.mentionConfig.disableStyle;\r\n        this.searchList.activeIndex = 0;\r\n        this.searchList.position(nativeElement, this.iframe);\r\n        window.requestAnimationFrame(() => this.searchList.reset());\r\n      }\r\n    }\r\n    ","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MentionDirective } from './mention.directive';\r\nimport { MentionListComponent } from './mention-list.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MentionDirective,\r\n    MentionListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    MentionDirective\r\n  ],\r\n  entryComponents: [\r\n    MentionListComponent\r\n  ]\r\n})\r\nexport class MentionModule { }\r\n"]}