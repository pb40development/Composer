{"version":3,"file":"ang-jsoneditor.mjs","sources":["../../src/jsoneditor/jsoneditoroptions.ts","../../src/jsoneditor/jsoneditor.component.ts","../../src/lib.module.ts","../../src/ang-jsoneditor.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/ban-types */\n\nexport type JsonEditorMode = 'tree' | 'view' | 'form' | 'code' | 'text';\n\nexport interface JsonEditorTreeNode {\n  field: String,\n  value: String,\n  path: String[]\n}\n\nexport interface IError {\n  path: (string | number)[];\n  message: string;\n}\n\nexport class JsonEditorOptions {\n  public ace: any;\n  public ajv: Object;\n\n\n  /**\n   *   {function} onChange  Callback method, triggered\n  on change of contents.\n  Does not pass the contents itself.\n  See also `onChangeJSON` and\n  `onChangeText`.\n   */\n  public onChange: () => void;\n\n  /**\n   *   // {function} onChangeJSON  Callback method, triggered\n//     in modes on change of contents,\n//     passing the changed contents\n//     as JSON.\n//     Only applicable for modes\n//     'tree', 'view', and 'form'.\n   */\n  public onChangeJSON: () => void;\n\n\n  public onNodeName: () => void;\n  public onCreateMenu: (items: Array<any>, node: object) => Array<any>;\n  public onColorPicker: () => void;\n\n  /**\n  // {function} onChangeText  Callback method, triggered\n  //     in modes on change of contents,\n  //     passing the changed contents\n  //     as stringified JSON.\n   */\n  public onChangeText: (jsonstr: string) => void;\n\n\n  /**\n   *   {function} onSelectionChange Callback method,\n  triggered on node selection change\n  Only applicable for modes\n  'tree', 'view', and 'form'\n   */\n  public onSelectionChange: () => void;\n\n  /**\n   *     {function} onTextSelectionChange Callback method,\n  triggered on text selection change\n  Only applicable for modes\n   */\n  public onTextSelectionChange: () => void;\n\n\n  /**\n   *   // {function} onEvent Callback method, triggered\n    // when an event occurs in\n    // a JSON field or value.\n    // Only applicable for\n    // modes 'form', 'tree' and\n    // 'view'\n   */\n  public onEvent: () => void;\n\n  /**\n   * // *   {function} onFocus  Callback method, triggered\n//  when the editor comes into focus,\n//  passing an object {type, target},\n//  Applicable for all modes\n   */\n  public onFocus: () => void;\n\n  // *   {function} onBlur   Callback method, triggered\n  //  when the editor goes out of focus,\n  //  passing an object {type, target},\n  //  Applicable for all modes\n  public onBlur: () => void;\n\n  /**\n   *  // *   {function} onClassName Callback method, triggered\n// when a Node DOM is rendered. Function returns\n// a css class name to be set on a node.\n// Only applicable for\n// modes 'form', 'tree' and\n// 'view'\n   */\n  public onClassName: (node: JsonEditorTreeNode) => void;\n\n  public onEditable: (node: JsonEditorTreeNode | {}) => boolean | { field: boolean, value: boolean };\n\n  /**\n   *   {function} onError   Callback method, triggered\n  when an error occurs\n   */\n  public onError: (error: any) => void;\n  public onModeChange: (newMode: JsonEditorMode, oldMode: JsonEditorMode) => void;\n  public onValidate: (json: Object) => IError[];\n  public onValidationError: (errors: object[]) => void;\n\n  public enableSort: boolean;\n  public enableTransform: boolean;\n  public escapeUnicode: boolean;\n  public expandAll: boolean;\n  public sortObjectKeys: boolean;\n  public history: boolean;\n  public mode: JsonEditorMode;\n  public modes: JsonEditorMode[];\n  public name: String;\n  public schema: Object;\n  public search: boolean;\n  public indentation: Number;\n  public templates: Object;\n  public theme: Number;\n  public language: String;\n  public languages: Object;\n\n  /**\n   * Adds main menu bar - Contains format, sort, transform, search etc. functionality. True\n   * by default. Applicable in all types of mode.\n   */\n  public mainMenuBar: boolean;\n\n  /**\n   * Adds navigation bar to the menu - the navigation bar visualize the current position on\n   * the tree structure as well as allows breadcrumbs navigation.\n   * True by default.\n   * Only applicable when mode is 'tree', 'form' or 'view'.\n   */\n  public navigationBar: boolean;\n\n  /**\n   * Adds status bar to the bottom of the editor - the status bar shows the cursor position\n   * and a count of the selected characters.\n   * True by default.\n   * Only applicable when mode is 'code' or 'text'.\n   */\n  public statusBar: boolean;\n\n  constructor() {\n    this.enableSort = true;\n    this.enableTransform = true;\n    this.escapeUnicode = false;\n    this.expandAll = false;\n    this.sortObjectKeys = false;\n    this.history = true;\n    this.mode = 'tree';\n    this.search = true;\n    this.indentation = 2;\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @angular-eslint/no-input-rename */\n/* eslint-disable @angular-eslint/no-output-native */\n\nimport JSONEditor from 'jsoneditor';\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  forwardRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IError, JsonEditorMode, JsonEditorOptions, JsonEditorTreeNode } from './jsoneditoroptions';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'json-editor',\n  template: `<div [id]=\"id\" #jsonEditorContainer></div>`,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => JsonEditorComponent),\n      multi: true\n    }\n  ],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class JsonEditorComponent implements ControlValueAccessor, OnInit, OnDestroy {\n  @ViewChild('jsonEditorContainer', { static: true }) jsonEditorContainer: ElementRef;\n  @Input() options: JsonEditorOptions = new JsonEditorOptions();\n  @Output()\n  change: EventEmitter<any> = new EventEmitter<any>();\n  @Output()\n  jsonChange: EventEmitter<any> = new EventEmitter<any>();\n  @Input() debug = false;\n  public optionsChanged = false;\n\n  disabled = false;\n  isFocused = false;\n\n  public id = 'angjsoneditor' + Math.floor(Math.random() * 1000000);\n  private _data: Object = {};\n  private editor: any;\n\n  constructor() { }\n\n  @Input('data')\n  set data(value: Object) {\n    this._data = value;\n    if (this.editor) {\n      this.editor.destroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnInit() {\n    let optionsBefore = this.options;\n    if (!this.optionsChanged && this.editor) {\n      optionsBefore = this.editor.options;\n    }\n\n    if (!this.options.onChangeJSON && this.jsonChange) {\n      this.options.onChangeJSON = this.onChangeJSON.bind(this);\n    }\n    if (!this.options.onChange && this.change) {\n      this.options.onChange = this.onChange.bind(this);\n    }\n    const optionsCopy = Object.assign({}, optionsBefore);\n\n    // expandAll is an option only supported by ang-jsoneditor and not by the the original jsoneditor.\n    delete optionsCopy.expandAll;\n    if (this.debug) {\n      console.log(optionsCopy, this._data);\n    }\n    if (!this.jsonEditorContainer.nativeElement) {\n      console.error(`Can't find the ElementRef reference for jsoneditor)`);\n    }\n\n    if (\n        optionsCopy.mode === 'text' || optionsCopy.mode === 'code' ||\n        (\n          optionsCopy.modes && \n          (optionsCopy.modes.indexOf('text') !== -1 || optionsCopy.modes.indexOf('code') !== -1)\n        )\n      ) {\n      optionsCopy.onChangeJSON = null;\n    }\n    this.editor = new JSONEditor(this.jsonEditorContainer.nativeElement, optionsCopy, this._data);\n\n    if (this.options.expandAll) {\n      this.editor.expandAll();\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy();\n  }\n\n\n  /**\n   * ngModel\n   * ControlValueAccessor\n   */\n\n  // ControlValueAccessor implementation\n  writeValue(value: any) {\n    this.data = value;\n  }\n\n  // Implemented as part of ControlValueAccessor\n  registerOnChange(fn) {\n    this.onChangeModel = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  public onChange(e) {\n    if (this.editor) {\n      try {\n        const json = this.editor.get();\n        this.onChangeModel(json);\n        this.change.emit(json);\n      } catch (error) {\n        if (this.debug) {\n          console.log(error);\n        }\n      }\n    }\n  }\n\n  public onChangeJSON(e) {\n    if (this.editor) {\n      try {\n        this.jsonChange.emit(this.editor.get());\n      } catch (error) {\n        if (this.debug) {\n          console.log(error);\n        }\n      }\n    }\n  }\n\n\n  /**\n   * JSON EDITOR FUNCTIONS\n   */\n\n  public collapseAll() {\n    this.editor.collapseAll();\n  }\n\n  public expandAll() {\n    this.editor.expandAll();\n  }\n\n  public focus() {\n    this.editor.focus();\n  }\n\n  public get(): JSON {\n    return this.editor.get();\n  }\n\n  public getMode(): JsonEditorMode {\n    return this.editor.getMode() as JsonEditorMode;\n  }\n\n  public getName(): string {\n    return this.editor.getName();\n  }\n\n  public getText(): string {\n    return this.editor.getText();\n  }\n\n  public set(json: JSON) {\n    this.editor.set(json);\n  }\n\n  public setMode(mode: JsonEditorMode) {\n    this.editor.setMode(mode);\n  }\n\n  public setName(name: string) {\n    this.editor.setName(name);\n  }\n\n  public setSelection(start, end) {\n    this.editor.setSelection(start, end);\n  }\n\n  public getSelection(): any {\n    return this.editor.getSelection();\n  }\n\n  public getValidateSchema(): any {\n    return this.editor.validateSchema;\n  }\n\n  public setSchema(schema: any, schemaRefs: any) {\n    this.editor.setSchema(schema, schemaRefs);\n  }\n\n  public search(query: string) {\n    this.editor.search(query);\n  }\n\n  public setOptions(newOptions: JsonEditorOptions) {\n    if (this.editor) {\n      this.editor.destroy();\n    }\n    this.optionsChanged = true;\n    this.options = newOptions;\n    this.ngOnInit();\n  }\n\n  public update(json: JSON) {\n    this.editor.update(json);\n  }\n\n  public destroy() {\n    this.editor.destroy();\n  }\n\n  public getEditor(){\n    return this.editor;\n  }\n\n  public isValidJson() {\n    try {\n      JSON.parse(this.getText());\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  private onTouched = () => {\n  };\n\n  // Implemented as part of ControlValueAccessor.\n  private onChangeModel = (e) => {\n  };\n}\n\nexport { JsonEditorOptions, JsonEditorMode, JsonEditorTreeNode, IError };\n","import { NgModule, ModuleWithProviders, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { JsonEditorComponent } from './jsoneditor/jsoneditor.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [\n    JsonEditorComponent\n  ],\n  exports: [\n    JsonEditorComponent\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA,\n    NO_ERRORS_SCHEMA\n  ]\n})\nexport class NgJsonEditorModule {\n\n  public static forRoot(): ModuleWithProviders<any> {\n\n    return {\n      ngModule: NgJsonEditorModule,\n      providers: [\n      ]\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}