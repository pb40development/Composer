import T from"axios";function o(i){if(!i)throw new Error("ID must be provided");if(typeof i=="number")throw new Error("ID must be of type string")}import y from"axios";function e(i="",s,t){let{headers:r={},method:a,body:S=null,params:x={}}=s,R=C(x);return R=R?`?${R}`:"",y({method:a,url:t.basePath+i+R,headers:{...r,Authorization:`Bearer ${t.api_key}`,"X-Requested-With":"XMLHttpRequest","Content-type":"application/json","accept-encoding":"null"},data:S&&JSON.stringify(S)})}function C(i,s){return Object.keys(i).map(r=>{let a=i[r];return i.constructor===Array?r=`${s}[]`:i.constructor===Object&&(r=s?`${s}[${r}]`:r),typeof a=="object"?C(a,r):`${r}=${encodeURIComponent(a)}`}).flat(10).join("&")}var n=class{config;constructor(s){this.config=s}get(s){return e("/api/subscribers",{method:"GET",params:s},this.config)}createOrUpdate(s){return e("/api/subscribers",{method:"POST",body:s},this.config)}find(s){return o(s),e(`/api/subscribers/${s}`,{method:"GET"},this.config)}getCount(){return e("/api/subscribers",{method:"GET",params:{limit:0}},this.config)}delete(s){return o(s),e(`/api/subscribers/${s}`,{method:"DELETE"},this.config)}forget(s){return o(s),e(`/api/subscribers/${s}/forget`,{method:"POST"},this.config)}};var p=class{config;constructor(s){this.config=s}get(s){return e("/api/campaigns",{method:"GET",params:s},this.config)}find(s){return o(s),e(`/api/campaigns/${s}`,{method:"GET"},this.config)}create(s){return e("/api/campaigns",{method:"POST",body:s},this.config)}update(s,t){return o(s),e(`/api/campaigns/${s}`,{method:"PUT",body:t},this.config)}schedule(s,t){return o(s),e(`/api/campaigns/${s}/schedule`,{method:"POST",body:t},this.config)}cancel(s){return o(s),e(`/api/campaigns/${s}/cancel`,{method:"POST"},this.config)}delete(s){return o(s),e(`/api/campaigns/${s}`,{method:"DELETE"},this.config)}};var m=class{config;constructor(s){this.config=s}get(s,t){return e(`/api/forms/${s}`,{method:"GET",params:t},this.config)}update(s,t){return o(s),e(`/api/forms/${s}`,{method:"PUT",body:t},this.config)}delete(s){return o(s),e(`/api/forms/${s}`,{method:"DELETE"},this.config)}};var c=class{config;constructor(s){this.config=s}get(s){return e("/api/groups",{method:"GET",params:s},this.config)}create(s){return e("/api/groups",{method:"POST",body:s},this.config)}update(s,t){return o(s),e(`/api/groups/${s}`,{method:"PUT",body:t},this.config)}delete(s){return o(s),e(`/api/groups/${s}`,{method:"DELETE"},this.config)}getSubscribers(s,t){return o(s),e(`/api/groups/${s}/subscribers`,{method:"GET",params:t},this.config)}assignSubscriber(s,t){return o(s),o(t),e(`/api/subscribers/${s}/groups/${t}`,{method:"POST"},this.config)}unAssignSubscriber(s,t){return o(s),o(t),e(`/api/subscribers/${s}/groups/${t}`,{method:"DELETE"},this.config)}};var u=class{config;constructor(s){this.config=s}get(s){return e("/api/segments",{method:"GET",params:s},this.config)}getSubscribers(s,t){return o(s),e(`/api/segments/${s}/subscribers`,{method:"GET",params:t},this.config)}update(s,t){return o(s),e(`/api/segments/${s}`,{method:"PUT",body:t},this.config)}delete(s){return o(s),e(`/api/segments/${s}`,{method:"DELETE"},this.config)}};var f=class{config;constructor(s){this.config=s}get(s){return e("/api/fields",{method:"GET",params:s},this.config)}create(s){return e("/api/fields",{method:"POST",body:s},this.config)}update(s,t){return o(s),e(`/api/fields/${s}`,{method:"PUT",body:t},this.config)}delete(s){return o(s),e(`/api/fields/${s}`,{method:"DELETE"},this.config)}};var g=class{config;constructor(s){this.config=s}get(s){return e("/api/automations",{method:"GET",params:s},this.config)}find(s){return o(s),e(`/api/automations/${s}`,{method:"GET"},this.config)}getAutomationSubscribers(s,t){return o(s),e(`/api/automations/${s}/activity`,{method:"GET",params:t},this.config)}};var l=class{config;constructor(s){this.config=s}get(){return e("/api/timezones",{method:"GET"},this.config)}};var b=class{config;constructor(s){this.config=s}get(){return e("/api/campaigns/languages",{method:"GET"},this.config)}};var h=class{config;constructor(s){this.config=s}send(s){return e("/api/batch",{method:"POST",body:s},this.config)}};var d=class{config;constructor(s){this.config=s}get(){return e("/api/webhooks",{method:"GET"},this.config)}find(s){return o(s),e(`/api/webhooks/${s}`,{method:"GET"},this.config)}create(s){return e("/api/webhooks",{method:"POST",body:s},this.config)}update(s,t){return e(`/api/webhooks/${s}`,{method:"PUT",body:t},this.config)}delete(s){return o(s),e(`/api/webhooks/${s}`,{method:"DELETE"},this.config)}};var P=class{config;constructor(s){this.config=s}getSentCampaigns(s){return s.filter={status:"sent"},e("/api/campaigns",{method:"GET",params:s},this.config)}async getSentCampaignStats(s){o(s);let t=await e(`/api/campaigns/${s}`,{method:"GET"},this.config);if(t.data&&t.data.data&&t.data.data.stats)return t.data.data.stats;throw t.data&&t.data.data&&t.data.data.status!=="sent"?new Error("No stats available. See if ID of a sent campaign was provided."):new Error("No stats available. See if correct ID was provided.")}async getSentCampaignSubscribers(s,t){return o(s),e(`/api/campaigns/${s}/reports/subscriber-activity`,{method:"POST",body:t},this.config)}getFormsByType(s,t){return e(`/api/forms/${s}`,{method:"GET",params:t},this.config)}async getFormsCountByType(s){let t=await e(`/api/forms/${s}`,{method:"GET"},this.config);if(t.data&&t.data&&t.data.meta&&t.data.meta.aggregations)return t.data.meta.aggregations[s];throw new Error("No stats available.")}getFormSubscribers(s,t){return e(`/api/forms/${s}/subscribers`,{method:"GET",params:t},this.config)}getAutomations(s){return e("/api/automations",{method:"GET",params:s},this.config)}async getAutomationStats(s){o(s);let t=await e(`/api/automations/${s}`,{method:"GET"},this.config);if(t.data&&t.data.data&&t.data.data.stats)return t.data.data.stats;throw new Error("No stats available.")}getAutomationSubscribers(s,t){return o(s),e(`/api/automations/${s}/activity`,{method:"GET",params:t},this.config)}};var A=class{config;subscribers;campaigns;forms;groups;segments;fields;automations;timezones;languages;batches;webhooks;stats;constructor(s){this.config={api_key:s.api_key,basePath:s.base_path||"https://connect.mailerlite.com"},this.subscribers=new n(this.config),this.campaigns=new p(this.config),this.forms=new m(this.config),this.groups=new c(this.config),this.segments=new u(this.config),this.fields=new f(this.config),this.automations=new g(this.config),this.timezones=new l(this.config),this.languages=new b(this.config),this.batches=new h(this.config),this.webhooks=new d(this.config),this.stats=new P(this.config)}};export{A as default};
//# sourceMappingURL=index.mjs.map