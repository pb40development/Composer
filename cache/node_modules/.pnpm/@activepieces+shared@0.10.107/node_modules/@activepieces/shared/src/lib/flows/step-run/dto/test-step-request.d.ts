import { Static } from '@sinclair/typebox';
import { ProgressUpdateType } from '../../../engine';
export declare const CreateStepRunRequestBody: import("@sinclair/typebox").TObject<{
    flowVersionId: import("@sinclair/typebox").TString<string>;
    stepName: import("@sinclair/typebox").TString<string>;
    id: import("@sinclair/typebox").TString<string>;
}>;
export type CreateStepRunRequestBody = Static<typeof CreateStepRunRequestBody>;
export declare const StepRunResponse: import("@sinclair/typebox").TObject<{
    id: import("@sinclair/typebox").TString<string>;
    success: import("@sinclair/typebox").TBoolean;
    output: import("@sinclair/typebox").TUnknown;
    standardError: import("@sinclair/typebox").TString<string>;
    standardOutput: import("@sinclair/typebox").TString<string>;
}>;
export type StepRunResponse = Static<typeof StepRunResponse>;
export declare const StepExecutionPath: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TTuple<[import("@sinclair/typebox").TString<string>, import("@sinclair/typebox").TNumber]>>;
export type StepExecutionPath = Static<typeof StepExecutionPath>;
export declare const UpdateRunProgressRequest: import("@sinclair/typebox").TObject<{
    runDetails: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        status: import("@sinclair/typebox").TLiteral<import("../../../flow-run/execution/flow-execution").FlowRunStatus.PAUSED>;
        pauseMetadata: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TLiteral<import("../../../flow-run/execution/flow-execution").PauseType.DELAY>;
            resumeDateTime: import("@sinclair/typebox").TString<string>;
            handlerId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<string>>;
            progressUpdateType: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TEnum<typeof ProgressUpdateType>>;
        }>, import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TLiteral<import("../../../flow-run/execution/flow-execution").PauseType.WEBHOOK>;
            requestId: import("@sinclair/typebox").TString<string>;
            response: import("@sinclair/typebox").TUnknown;
            handlerId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<string>>;
            progressUpdateType: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TEnum<typeof ProgressUpdateType>>;
        }>]>>;
        steps: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString<string>, import("@sinclair/typebox").TUnknown>;
        duration: import("@sinclair/typebox").TNumber;
        tasks: import("@sinclair/typebox").TNumber;
        tags: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString<string>>>;
        error: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            stepName: import("@sinclair/typebox").TString<string>;
            message: import("@sinclair/typebox").TString<string>;
        }>>;
        stopResponse: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            status: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
            body: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnknown>;
            headers: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString<string>, import("@sinclair/typebox").TString<string>>>;
        }>>;
    }>, import("@sinclair/typebox").TObject<{
        status: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<import("../../../flow-run/execution/flow-execution").FlowRunStatus.FAILED>, import("@sinclair/typebox").TLiteral<import("../../../flow-run/execution/flow-execution").FlowRunStatus.SUCCEEDED>, import("@sinclair/typebox").TLiteral<import("../../../flow-run/execution/flow-execution").FlowRunStatus.RUNNING>, import("@sinclair/typebox").TLiteral<import("../../../flow-run/execution/flow-execution").FlowRunStatus.QUOTA_EXCEEDED>, import("@sinclair/typebox").TLiteral<import("../../../flow-run/execution/flow-execution").FlowRunStatus.TIMEOUT>, import("@sinclair/typebox").TLiteral<import("../../../flow-run/execution/flow-execution").FlowRunStatus.INTERNAL_ERROR>, import("@sinclair/typebox").TLiteral<import("../../../flow-run/execution/flow-execution").FlowRunStatus.STOPPED>]>;
        steps: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString<string>, import("@sinclair/typebox").TUnknown>;
        duration: import("@sinclair/typebox").TNumber;
        tasks: import("@sinclair/typebox").TNumber;
        tags: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString<string>>>;
        error: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            stepName: import("@sinclair/typebox").TString<string>;
            message: import("@sinclair/typebox").TString<string>;
        }>>;
        stopResponse: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            status: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
            body: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnknown>;
            headers: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString<string>, import("@sinclair/typebox").TString<string>>>;
        }>>;
    }>]>;
    runId: import("@sinclair/typebox").TString<string>;
    progressUpdateType: import("@sinclair/typebox").TEnum<typeof ProgressUpdateType>;
    workerHandlerId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
}>;
export type UpdateRunProgressRequest = Static<typeof UpdateRunProgressRequest>;
