import { ApId } from '../common/id-generator';
import { Static } from '@sinclair/typebox';
export type ProjectId = ApId;
export declare enum NotificationStatus {
    NEVER = "NEVER",
    ALWAYS = "ALWAYS"
}
export declare const ProjectUsage: import("@sinclair/typebox").TObject<{
    tasks: import("@sinclair/typebox").TNumber;
    teamMembers: import("@sinclair/typebox").TNumber;
}>;
export type ProjectUsage = Static<typeof ProjectUsage>;
export type ProjectPlanId = string;
export declare const ProjectPlan: import("@sinclair/typebox").TObject<{
    projectId: import("@sinclair/typebox").TString<string>;
    stripeCustomerId: import("@sinclair/typebox").TString<string>;
    stripeSubscriptionId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
    subscriptionStartDatetime: import("@sinclair/typebox").TString<string>;
    flowPlanName: import("@sinclair/typebox").TString<string>;
    minimumPollingInterval: import("@sinclair/typebox").TNumber;
    connections: import("@sinclair/typebox").TNumber;
    teamMembers: import("@sinclair/typebox").TNumber;
    tasks: import("@sinclair/typebox").TNumber;
    tasksPerDay: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<number | null>>;
    id: import("@sinclair/typebox").TString<string>;
    created: import("@sinclair/typebox").TString<string>;
    updated: import("@sinclair/typebox").TString<string>;
}>;
export type ProjectPlan = Static<typeof ProjectPlan>;
export declare const Project: import("@sinclair/typebox").TObject<{
    ownerId: import("@sinclair/typebox").TString<string>;
    displayName: import("@sinclair/typebox").TString<string>;
    notifyStatus: import("@sinclair/typebox").TEnum<typeof NotificationStatus>;
    platformId: import("@sinclair/typebox").TString<string>;
    externalId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<string>>;
    id: import("@sinclair/typebox").TString<string>;
    created: import("@sinclair/typebox").TString<string>;
    updated: import("@sinclair/typebox").TString<string>;
}>;
export type Project = Static<typeof Project>;
export declare const ProjectWithLimits: import("@sinclair/typebox").TComposite<[import("@sinclair/typebox").TObject<{
    ownerId: import("@sinclair/typebox").TString<string>;
    displayName: import("@sinclair/typebox").TString<string>;
    notifyStatus: import("@sinclair/typebox").TEnum<typeof NotificationStatus>;
    platformId: import("@sinclair/typebox").TString<string>;
    externalId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<string>>;
    id: import("@sinclair/typebox").TString<string>;
    created: import("@sinclair/typebox").TString<string>;
    updated: import("@sinclair/typebox").TString<string>;
}>, import("@sinclair/typebox").TObject<{
    usage: import("@sinclair/typebox").TObject<{
        tasks: import("@sinclair/typebox").TNumber;
        teamMembers: import("@sinclair/typebox").TNumber;
    }>;
    plan: import("@sinclair/typebox").TObject<{
        projectId: import("@sinclair/typebox").TString<string>;
        stripeCustomerId: import("@sinclair/typebox").TString<string>;
        stripeSubscriptionId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
        subscriptionStartDatetime: import("@sinclair/typebox").TString<string>;
        flowPlanName: import("@sinclair/typebox").TString<string>;
        minimumPollingInterval: import("@sinclair/typebox").TNumber;
        connections: import("@sinclair/typebox").TNumber;
        teamMembers: import("@sinclair/typebox").TNumber;
        tasks: import("@sinclair/typebox").TNumber;
        tasksPerDay: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<number | null>>;
        id: import("@sinclair/typebox").TString<string>;
        created: import("@sinclair/typebox").TString<string>;
        updated: import("@sinclair/typebox").TString<string>;
    }>;
}>]>;
export type ProjectWithLimits = Static<typeof ProjectWithLimits>;
